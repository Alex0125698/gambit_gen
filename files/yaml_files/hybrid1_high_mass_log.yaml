##########################################################################
## GAMBIT configuration for the following                               ##
##                                                                      ##
## Models: THDM, THDMI, THDMII, THDMLS, THDMflipped                     ##
##                                                                      ##
## Includes all compatible likelihoods:                                 ##
## theoretical, collider, electroweak, flavour                          ##
##                                                                      ##
## Requires backends:                                                   ##
## thdmc, SuperISO, HiggsBounds, HiggsSignals, HEPLike                  ##
##                                                                      ##
## Author: A.S. Woodcock                                                ##
## Date: 22/JUL/2022                                                    ##
##                                                                      ##
##########################################################################


Parameters:
    StandardModel_SLHA2: !import include/StandardModel_SLHA2_defaults.yaml

    # different model types can be selected with THDMI, THDMII, THDMX, THDMY,
    # otherwise use THDM for the General CP-conserving 2HDM

    # parameters for these are provided in the generic basis. Alternatively, use the suffix
    # '_higgs' or '_physical' or '_hybrid_Higgs' for alternative bases, e.g. 'THDMI_higgs'

    # the models described so far are tree-level. 'atQ' is suffixed for loop-level models
    # which use a FlexibleSUSY spectrum generator, e.g. 'THDMI_higgsatQ'

    TheModelName:

      # model parameters are specified here
      # generic basis:      lambda1, lambda2, lambda3, lambda4, lambda5, lambda6, lambda7, m12_2, tanb
      # Higgs basis:        Lambda1, Lambda2, Lambda3, Lambda4, Lambda5, Lambda6, Lambda7, M12_2, tanb
      # Physical basis:     mh, mH, mA, mHp, lambda6, lambda7, m12_2, sba, tanb
      # hybrid_Higgs basis: mh, mH, cba, tanb, Lambda4, Lambda5, Lambda7, lambda6, lambda7

      # for the general model, we must also specify the Yukawas
      # yu2_re_ij, yu2_im_ij, yd2_re_ij, yd2_im_ij, yl2_re_ij, yl2_im_ij, 
      # where we have a separate parameter for each i,j (which run from 1 to 3)
      
      # lower limit on lambda1,2 of 0 required for vacuum stability
      # limit on |lambda1,...,7| of 4pi required for perturbativity
      # lambda6,7 set to 0 for Z2-symmetric scalar sector (to avoid large FCNCs at 1-loop level)
      # lower limit of tanb due to perturbativity of top Yukawa coupling
      # range of m12_2 hard to justify so we use a logarithmic prior over a large region
      #      but m12_2 too low tends to cause negative masses

      mh:
          range: [115,135]
          prior_Type: flat
      mH:
          range: [1050, 2500]
          prior_Type: flat
      cba:
          range: [-0.55, +0.55]
          prior_Type: flat
      tanb:
          range: [0.001, 70]
          prior_Type: log
      Lambda4:
          # range: [-13, +13]
          range: [-13, +13]
          # range: [-4,5]
          prior_Type: flat
      Lambda5:
          # range: [-13, +13]
          range: [-9, +9]
          # range: [-3,4]
          prior_Type: flat
      Lambda7:
          # range: [-13, +13]
          range: [-5, +5]
          # range: [-2,2.5]
          prior_Type: flat
      lambda6:
          fixed_value: 0.0
      lambda7:
          fixed_value: 0.0
      #~~Qin: 91.1876 # = mZ


#################################
##     PRINTER SELECTION       ##
#################################


Printer:

  # printer: cout

  # printer: ascii
  # options:
  #   buffer_length: 100
  #   output_file: "scan.txt"

  # printer: hdf5
  # options:
  #   output_file: "scan.hdf5"
  #   group: "/data"
  #   delete_file_on_restart: true

  printer: hdf5_v1
  options:
    output_file: "scan.hdf5"
    group: "/data"
    delete_file_on_restart: true
    disable_combine_routines: true


#################################
##     SCANNER SELECTION       ##
#################################


Scanner:

  use_scanner: differentialEvolution

  scanners:

    random:
      plugin: random
      point_number: 10000000
      like:  LogLike

    differentialEvolution:
      plugin: diver
      like: LogLike
      verbosity: 0

      # turning this off will use the less aggressive jDE self-adaptive optimization
      # note that lambdajDE is the default method
      lambdajDE: false

      # run a self-adaptive scan where the following set automatically
      # F [0.7] = mutation scale factor,
      # Cr [0.9] = crossover rate,
      # lambda [0] = best vector usage rate,
      # current [false] = use target vector as base for mutation,
      # expon [false] = use exponential crossover,
      jDE: true

      # population size (increase this to get more robust scan, or decrease to make it run faster)
      NP: 40000

      # when the average generation improvement falls below this, we stop the scan
      convthresh: 1e-6

      # try to fill the first generation with only valid points (1), or use any point (0)
      init_population_strategy: 0

      # donâ€™t give up on initial generation
      max_initialisation_attempts: 1000000

      # set the acceptable value to coincide with our invalidation threshold
      max_acceptable_value: 9e5 # (invalid for < -1e6)

      outputSamples: false


#################################
##  OBSERVABLES / LIKELIHOODS  ##
#################################


ObsLikes:

  #-------------------------------------#
  #      THEORETICAL LIKELIHOODS        #
  #-------------------------------------#

  # Checks that the LO or NLO scattering-matrix is unitary
  # Calculates and applies limit on eigenvalues of matrix
  # Likelihood type: Half-Gaussian
  # Only supports CP-conserving models
  # Unitarity of the S-matrix at next leading order (includes leading order too)
  #~1- purpose:    LogLike
    #~1capability: unitarity_LogLikelihood_THDM
    #~1function: LO_unitarity_LogLikelihood_THDM

  #~2- purpose:    LogLike
    #~2capability: unitarity_LogLikelihood_THDM
    #~2function: NLO_unitarity_LogLikelihood_THDM

  # Stability of the 2HDM Potential
  # Applies the THDM stability constraints on the potential
  # NOTE: This likelihood has two parts, described below
  # (i) Applies strict stability constraint
  # Likelihood type: Acceptance/Rejection
  # (ii) If rejected, applies looser stabililty constraints
  # Likelihood type: Half-Gaussian
  #~3- purpose:    LogLike
    #~3capability: stability_LogLikelihood_THDM

  # Perturbativity check on h0 mass loop-corrections
  # Checks that loop corrections to the pole mass of mh0
  # do not exceed 50% of the input mass at Qin
  # Likelihood type: Acceptance/Rejection
  #~4- purpose:    LogLike
    #~4capability: light_scalar_mass_corrections_LogLikelihood_THDM

  # Checks that loop corrections to the pole masses of mH0,
  # mA0, mHpm do not exceed 50% of the input mass at Qin
  # Likelihood type: Acceptance/Rejection
  # Perturbativity check on other scalar mass loop-corrections
  #~5- purpose:    LogLike
    #~5capability: heavy_scalar_mass_corrections_LogLikelihood_THDM

  # prevents Higgs pole mass from going out of set range (soft-cutoff)
  - purpose:    LogLike
    capability: higgs_mass_LogLikelihood
    options:
      higgs_mass_uncertainty: 10
      valid_range: 40

  # enforces a mass range for all scalars from the yaml
  # these are specified by the run options (given below):
  # (*) maximum_scalar_mass
  # (*) minimum_scalar_mass
  # Likelihood type: Acceptance/Rejection
  #~6- purpose:    LogLike
    #~6capability: scalar_mass_range_LogLikelihood_THDM

  # Perturbativity check on lambdas and scalar couplings
  # Calculates all quartic Higgs couplings in the physical
  # basis & applies a 4pi perturbativity constraint on each
  # Likelihood type: Half-Gaussian
  #~7- purpose:    LogLike
    #~7capability: perturbativity_LogLikelihood_THDM
    #~7function: perturbativity_LogLikelihood_THDM
  #~8- purpose:    LogLike
    #~8capability: perturbativity_LogLikelihood_THDM
    #~8function: perturbativity_lambdas_LogLikelihood_THDM

  # perturbativity constraint on yukawas
  #~9- purpose:    LogLike
    #~9capability: perturbativity_yukawas_LogLikelihood_THDM

  #-------------------------------------#
  #      COLLIDER LIKELIHOODS           #
  #-------------------------------------#

  ### NOTE
  # LHC & LEP likelihoods
  # Coupling Squared input structs are filled by colliderBit,
  # then chi^2 are extracted directly from HS & HB

  # HiggsSignals 2.5.0 likelihood
  #~B- purpose: LogLike
    #~Bcapability: LHC_Higgs_LogLike
    #~Bfunction: calc_HS_2_LHC_LogLike

  # HiggsBounds 5.8.0 likelihood
  #~A- purpose: LogLike
    #~Acapability: LEP_Higgs_LogLike
    #~Afunction: calc_HB_5_LEP_LogLike

  #-------------------------------------#
  #      PRECISION LIKELIHOODS          #
  #-------------------------------------#

  # Calculates the electroweak precision parameters, S, T, U, V, W, X
  # & fits to meausured values. S, T, U involve a correlation matrix.
  # Includes low-energy notation described in arxiv::9407203.
  # Likelihood type: Half-Gaussian
  #~C- purpose:    LogLike
    #~Ccapability: oblique_parameters_LogLikelihood_THDM

#   # muon anomalous magnetic moment likelihood (for GTHDM)
#   #~D- purpose: LogLike
#     #~Dcapability: lnL_gm2
#     #~Dfunction: lnL_gm2

  #-------------------------------------#
  #      FLAVOR LIKELIHOODS             #
  #-------------------------------------#

  # TODO: need to add the following information
  #       (i) which are relevant for G2HDM
  #      (ii) which are relevant for I/II/X/Y
  #     (iii) which cannot be explained by 2HDMs
  #      (iv) which should only be used as observables (e.g. due to high uncertainty)
  #       (v) which cause the largest performance hit

  # Source -> who provides the required calculations (GAMBIT, SuperISO, or HepLike)

  # Source: GAMBIT
  # Bs2llp (Bs2mutau, Bs2tautau)
  #~J- purpose:    LogLike
    #~Jcapability: Bs2llp_LogLikelihood

  # Source: GAMBIT, SuperISO
  # B2Kllp (B2Kmue, B2Ktaumu, B2Ktautau)
  #~K- purpose:    LogLike
    #~Kcapability: B2Kllp_LogLikelihood

  # Source: SuperISO, HEPLike
  # B -> mu mu
  #~Y- purpose:    LogLike
    #~Ycapability: B2mumu_LogLikelihood_Atlas
    #~Ysub_capabilities: [BRuntag_Bsmumu, BR_Bdmumu]
  #~W- purpose:    LogLike
    #~Wcapability: B2mumu_LogLikelihood_LHCb
    #~Wsub_capabilities: [BRuntag_Bsmumu, BR_Bdmumu]
  #~X- purpose:    LogLike
    #~Xcapability: B2mumu_LogLikelihood_CMS
    #~Xsub_capabilities: [BRuntag_Bsmumu, BR_Bdmumu]


#   # DOES NOTHING
#   # NOT USEFUL
#   # Source: GAMBIT
#   # B-Dstartaunu distributions
#   # No relevance for Type I and Type II
#   #~E- purpose:    LogLike
#     #~Ecapability: dBRBDstartaunu_LogLikelihood

#   # DOES NOTHING
#   # Source: GAMBIT
#   # B-Dtanu distributions
#   # No relevance for Type I and Type II
#   #~F- purpose:    LogLike
#     #~Fcapability: dBRBDtaunu_LogLikelihood

#   # DOES NOTHING
#   # NOT USEFUL
#   # Source: GAMBIT
#   # mu-e universality for gTHDM based on JHEP07(2013)044
#   # No relevance for Type I and Type II
#   #~G- purpose:    LogLike
#     #~Gcapability: gmu_ge_LogLikelihood

#   # DOES NOTHING
#   # NOT USEFUL
#   # Source: GAMBIT
#   # FLDstar polarization
#   # No relevance for Type I and Type II
#   #~H- purpose:    LogLike
#     #~Hcapability: FLDstar_LogLikelihood

  # Source: GAMBIT
  # Bc lifetime
  #~I- purpose:    LogLike
    #~Icapability: Bc_lifetime_LogLikelihood

  # Source: GAMBIT
  # RK and RKstarnunu
  #~L- purpose:    LogLike
    #~Lcapability: RK_RKstarnunu_LogLikelihood

#   # DOES NOTHING
#   # Source: GAMBIT
#   # BR(h->tau mu)
#   # No relevance for Type I and Type II
#   #~M- purpose:    LogLike
#     #~Mcapability: h2taumu_LogLikelihood

  # DOES NOTHING
#   # Source: GAMBIT
#   # BR(t->ch) 
#   # No relevance for Type I and Type II
#   #~N- purpose:    LogLike
#     #~Ncapability: t2ch_LogLikelihood

  # Source: GAMBIT / SuperISO
  # B meson mass aysmmetry
  #~O- purpose:    LogLike
    #~Ocapability: deltaMB_LogLikelihood

  # Source: SuperISO
  # B_d meson mass aysmmetry
  #~P- purpose:    LogLike
    #~Pcapability: deltaMBd_LogLikelihood

  # Source: GAMBIT or SuperISO
  # Tree-level leptonic and semi-leptonic B & D decay measurements 
  # (RD, RDstar, BDmunu, BDstarmunu, Btaunu, Rmu, Dstaunu, Dsmunu, Dmunu, Dtaunu, RDemu)
  #~Q- purpose:    LogLike
    #~Qcapability: SL_LogLikelihood

#   # DOES NOTHING
#   # Source: GAMBIT
#   # l -> l gamma (muegamma, tauegamma, taumugamma)
#   # No relevance for Type I and Type II
#   #~R- purpose:    LogLike
#     #~Rcapability: l2lgamma_LogLikelihood

#   # DOES NOTHING
#   # Source: GAMBIT
#   # l -> l l l (mueee, taueee, taumumumu, taumuee, taueemu, tauemumu, taumumue)
#   # No relevance for Type I and Type II
#   #~S- purpose:    LogLike
#     #~Scapability: l2lll_LogLikelihood

  # Source: SuperISO, HEPLike
  # b -> s gamma
  #~U- purpose:    LogLike
    #~Ucapability: b2sgamma_LogLikelihood

  # Source: SuperISO, HEPLike
  # B -> K* gamma
  #~V- purpose:    LogLike
    #~Vcapability: B2Kstargamma_LogLikelihood

  # # CAUSING SEGFAULT DURING CLEANUP
  # # Source: SuperISO, HEPLike
  # # RK
  # #~l- purpose:    LogLike
  #   #~lcapability: RK_LogLikelihood_LHCb

  # # CAUSING SEGFAULT DURING CLEANUP
  # # SPITS OUT ROOT WARNING
  # # Source: SuperISO, HEPLike
  # # RKstar
  # #~m- purpose:    LogLike
  #   #~mcapability: RKstar_LogLikelihood_LHCb

  # Source: SuperISO, HEPLike
  # B -> K* mu mu Angular
  #~Z- purpose:    LogLike
    #~Zcapability: B2KstarmumuAng_LogLikelihood_Atlas
    #~Zsub_capabilities: [FL, S3, S4, S5, S7, S8]
  #~a- purpose:    LogLike
    #~acapability: B2KstarmumuAng_LogLikelihood_CMS
    #~asub_capabilities: [P1, P5prime]
  #~b- purpose:    LogLike
    #~bcapability: B2KstarmumuAng_LogLikelihood_LHCb_2020
    #~bsub_capabilities: [FL, AFB, S3, S4, S5, S7, S8, S9]
  #~c- purpose:    LogLike
    #~ccapability: B2KstarmumuAng_LogLikelihood_Belle
    #~csub_capabilities: [P4prime, P5prime]

  # Source: SuperISO, HEPLike
  # B -> K* l l Angular
  #~e- purpose:    LogLike
    #~ecapability: B2KstarellellAng_LogLikelihood_Belle
    #~esub_capabilities: [P4prime, P5prime]

  # Source: SuperISO, HEPLike
  # B_u -> K* mu mu Angular
  #~f- purpose:    LogLike
    #~fcapability: Bu2KstarmumuAng_LogLikelihood_LHCb_2020
    #~fsub_capabilities: [FL, AFB, S3, S4, S5, S7, S8, S9]


  # Source: SuperISO, HEPLike
  # B -> K* e e angular low q2
  #~h- purpose:    LogLike
    #~hcapability: B2KstareeAng_Lowq2_LogLikelihood_LHCb_2020
    #~hsub_capabilities: [FLee, AT_Re, AT_2, AT_Im]

  # Source: SuperISO, HEPLike
  # B -> K* mu mu BR
  #~i- purpose:    LogLike
    #~icapability: B2KstarmumuBr_LogLikelihood_LHCb

  # Source: SuperISO, HEPLike
  # B -> K mu mu BR
  #~j- purpose:    LogLike
    #~jcapability: B2KmumuBr_LogLikelihood_LHCb

  # Source: SuperISO, HEPLike
  # Bs -> Phi mu mu BR
  #~k- purpose:    LogLike
    #~kcapability: Bs2phimumuBr_LogLikelihood



# DELETED

#   # Source: SuperISO, HEPLike
#   # B -> K* mu mu Angular CP assymetry
#   #~g- purpose:    LogLike
#     #~gcapability: B2KstarmumuAng_CPAssym_LogLikelihood_LHCb

#   # ~d- purpose:    LogLike
#   #   ~dcapability: B2KstarmumuAng_LogLikelihood_LHCb
#   #   ~dsub_capabilities: [???]

#   # Source: GAMBIT, HEPLike
#   # RD RDstar
#   #~T- purpose:    LogLike
#     #~Tcapability: RDRDstar_LogLikelihood

#################################
##          OBSERVABLES        ##
#################################


  # entire 2HDM spectrum
  - capability: THDM_spectrum
    type: map_str_dbl
    purpose: Observable

  # # 2HDM decay rates and branching ratios 
  # - capability: all_BFs
  #   purpose: Observable

  # # 2HDM prediction for the differential width of B -> D* tau nu
  # - capability: dBRBDstartaunu
  #   purpose: Observable

  # # 2HDM prediction for the differential width of B -> D tau nu
  # - capability: dBRBDtaunu
  #   purpose: Observable

  # # SuperIso prediction for b -> s gamma
  # - capability: prediction_b2sgamma
  #   purpose: Observable

  # # SuperIso prediction for B -> K* gamma
  # - capability: prediction_B2Kstargamma
  #   purpose: Observable

  # # SuperIso prediction for B -> mu mu
  # - capability: prediction_B2mumu
  #   purpose: Observable

  # # SuperIso prediction for B -> K* mu mu Ang Atlas
  # - capability: prediction_B2KstarmumuAng_Atlas
  #   purpose: Observable

  # # SuperIso prediction for B -> K* mu mu Ang CMS
  # - capability: prediction_B2KstarmumuAng_CMS
  #   purpose: Observable

  # # SuperIso prediction for B -> K* mu mu Ang Belle
  # - capability: prediction_B2KstarmumuAng_Belle
  #   purpose: Observable

  # # SuperIso prediction for B -> K* mu mu Ang LHCb
  # - capability: prediction_B2KstarmumuAng_LHCb
  #   purpose: Observable

  # # SuperIso prediction for B -> K* mu mu BR
  # - capability: prediction_B2KstarmumuBr
  #   purpose: Observable

  # # SuperIso prediction for B -> K mu mu BR
  # - capability: prediction_B2KmumuBr
  #   purpose: Observable

  # # SuperIso prediction for Bs -> phi mu mu BR
  # - capability: prediction_Bs2phimumuBr
  #   purpose: Observable

  # # SuperIso or THDM prediction for RD
  # - capability: RD
  #   #function: SuperIso_prediction_RD
  #   function: THDM_RD
  #   purpose: Observable

  # # SuperIso or THDM prediction for RDstar
  # - capability: RDstar
  #   #function: SuperIso_prediction_RDstar
  #   function: THDM_RDstar
  #   purpose: Observable

  # # SuperIso or THDM prediction for BDmunu
  # - capability: BDmunu
  #   #function: SuperIso_prediction_BDmunu
  #   function: THDM_BDmunu
  #   purpose: Observable

  # # SuperIso or THDM prediction for BDstarmunu
  # - capability: BDstarmunu
  #   #function: SuperIso_prediction_BDstarmunu
  #   function: THDM_BDstarmunu
  #   purpose: Observable

  # # SuperIso or THDM prediction for Btaunu
  # - capability: Btaunu
  #   #function: SuperIso_prediction_Btaunu
  #   function: THDM_Btaunu
  #   purpose: Observable

  # # SuperIso or THDM prediction for Rmu
  # - capability: Rmu
  #   #function: SuperIso_prediction_Rmu
  #   function: THDM_Rmu
  #   purpose: Observable

  # # SuperIso or THDM prediction for Dsmumu
  # - capability: Dsmunu
  #   #function: SuperIso_prediction_Dsmunu
  #   function: THDM_Dsmunu
  #   purpose: Observable

  # # SuperIso or THDM prediction for Dmunu
  # - capability: Dmunu
  #   #function: SuperIso_prediction_Dmunu
  #   function: THDM_Dmunu
  #   purpose: Observable

  # # SuperIso or THDM prediction for Dtaunu
  # - capability: Dtaunu
  #   #function: SuperIso_prediction_Dtaunu
  #   function: THDM_Dtaunu
  #   purpose: Observable

  # # SuperIso or THDM prediction for RDemu
  # - capability: RDemu
  #   #function: SuperIso_prediction_RDemu
  #   function: THDM_RDemu
  #   purpose: Observable

  # # SuperIso prediction for RK
  # - capability: RK
  #   purpose: Observable

  # # SuperIso prediction for RKstar, bins 0.045 - 1.1
  # - capability: RKstar_0045_11
  #   purpose: Observable

  # # SuperIso prediction for RKstar, bins 1.1 - 6
  # - capability: RKstar_11_60
  #   purpose: Observable
       

###################################
##  Likelihood/Observable Rules  ##
###################################


Rules:

  - capability: THDM_spectrum
    type: map_str_dbl
    options:
      print_minimal_yukawas: true

  - capability: THDM_spectrum
    type: Spectrum
    function: get_THDM_spectrum
    options:
      dummy: true
      #~ouse_speedhacks: true

  - capability: decay_rates
    function: all_decays

  - capability: all_BFs
    function: get_decaytable_as_map
    options:
      printall: true

    # set check_other_scale to some extra scale to 
    # check constraint at, or -1 to skip this
    # note that input scale is always checked
  - capability: perturbativity_LogLikelihood_THDM
    options:
      check_other_scale: 1000

  - capability: stability_LogLikelihood_THDM
    options:
      check_other_scale: 1000
      check_metastability: true

  - capability: unitarity_LogLikelihood_THDM
    options:
      check_other_scale: 1000
      # options below only for NLO unitarity
      check_correction_ratio: true
      wave_function_corrections: true
      gauge_corrections: true
      yukawa_corrections: true

  - capability: scalar_mass_range_LogLikelihood_THDM
    options:
      check_other_scale: -1
      minimum_scalar_mass: 0
      maximum_scalar_mass: 5000

  - capability: Higgs_Couplings
    function: THDM_higgs_couplings_2HDMC

  - capability: Reference_SM_Higgs_decay_rates
    function: Ref_SM_Higgs_decays_THDM

  - capability: Reference_SM_other_Higgs_decay_rates
    function: Ref_SM_other_Higgs_decays_THDM

  - capability: Reference_SM_A0_decay_rates
    function: Ref_SM_A0_decays_THDM

  - capability: t_decay_rates
    function: t_decays_THDM

  - capability: prediction_b2sgamma
    function: SuperIso_prediction_b2sgamma

  - capability: prediction_B2mumu
    function: SuperIso_prediction_B2mumu

  - capability: B2KstarmumuAng_LogLikelihood_Atlas
    function: HEPLike_B2KstarmumuAng_LogLikelihood_Atlas
    options:
      ignore_lowq2_bin: true

  - capability: B2KstarmumuAng_LogLikelihood_Belle
    function: HEPLike_B2KstarmumuAng_LogLikelihood_Belle
    options:
      ignore_lowq2_bin: true

  - capability: B2KstarmumuAng_LogLikelihood_LHCb_2020
    function: HEPLike_B2KstarmumuAng_LogLikelihood_LHCb_2020
    options:
      ignore_lowq2_bin: true

  - capability: B2KstarmumuBr_LogLikelihood_LHCb
    function: HEPLike_B2KstarmumuBr_LogLikelihood_LHCb
    options:
      ignore_lowq2_bin: true

  - capability: muon_gm2
    # function: SuperIso_muon_gm2
    function: THDM_mumugamma

  - capability: muon_gm2_SM
    function: gm2_SM_ee

  - capability: muon_gm2_Exp
    function: gm2_Exp_BNL

  - capability: LHC_Higgs_LogLike
    options:
      # -1:all, 0:RUN1_SS, 1:LATEST_SS, 2:LATEST_STXS
      HS_analysis: -1

#########################
# Logging setup
#########################


Logger:

  redirection:
    # [Debug] :  "debug.log"
    [Default] :  "default.log"
    [DecayBit] :  "DecayBit.log"
    [PrecisionBit] :  "PrecisionBit.log"
    [ColliderBit] :  "ColliderBit.log"
    [SpecBit] :  "SpecBit.log"

##########################
# Name/Value Section
##########################

KeyValues:

  likelihood:
    print_invalid_points: false
    model_invalid_for_lnlike_below: -1e6
    model_invalid_for_lnlike_below_alt: -5e5
    disable_print_for_lnlike_below: -3e4
    debug: false
    required_points: 12121212
    required_valid_points: 23232323
    required_scan_duration: 34343434

  dependency_resolution:
    prefer_model_specific_functions: true
    use_old_routines: false

  exceptions:
    dependency_resolver_error: fatal
    dependency_resolver_warning: non-fatal
    core_warning: fatal

  default_output_path: "the_output_folder"
  debug: false
