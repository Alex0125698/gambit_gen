-------------------------------
---Common fields---------------             ;EFN = empty for none

main_chain =    '../runs/scan.hdf5:/data';   ;Filename of chain to operate on.  For a group in an hdf5 file, something like 'myfile.hdf5:/group'
comparison_chain =                          ;Filename of secondary chain to operate on, for comparison (EFN)

do_posterior_pdf = F                        ;Parse, script or plot posterior pdfs
do_profile_like = T                         ;Parse, script or plot chain into profile likelihoods
oneD_contour_levels = 68.3 95.4 99.7             ;Contour levels to plot in 1D plots (EFN; script operation ignores actual values)
twoD_contour_levels = 68.3 95.4 99.7            ;Contour levels to plot in 2D plots (EFN; script operation ignores actual values)
oneD_plot_quantities = ; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ; 6 8 15 16 35 36 37 38 39 40 41 42 43 44 45 48 100 101 102 103 104 105   ;Parameters/observables to construct 1D plots of (EFN)
twoD_plot_quantities = {15,18} ; {2,15} {1,2} {1,3} {1,4} {1,5} {2,3} {2,4} {2,5} {3,4} {3,5} {4,5} {8,6} {8,10} {8,12} {8,14} {10,14} {12,14} {14,15} {15,14} {8,15} {10,15} {12,15} {14,12} {10,15} {10,12} {8,12} {15,18} {15,16}; {12,47} {101,15} {102,15} {103,15} {104,15} {105,15} {101,15} {101,45} {102,44} {103,37} {10,23} {15,23} {18,23} {10,24} {15,24} {18,24} {10,25} {15,25} {18,25} {10,26} {15,26} {18,26} {10,27} {15,27} {18,27} {8,35} {15,35} {18,35} {8,36} {15,36} {18,36} {8,37} {15,37} {18,37} {8,38} {15,38} {18,38} {8,39} {15,39} {18,39} {8,40} {15,40} {18,40} {8,41} {15,41} {18,41} {6,42} {15,42} {18,42} {6,43} {15,43} {18,43} {6,44} {15,44} {18,44} {6,45} {15,45} {18,45} {6,48} {15,48} {18,48} {16,35} {16,36} {16,37} {16,38} {16,39} {16,40} {16,41} {16,42} {16,43} {16,44} {16,45} {16,48} {16,47} ;Parameters/observable combinations to make 2D plots of (EFN)
plot_observables =                      ;Observables to make 2D plots of (EFN)

-------------------------------
---Parsing---------------------

parse_dir = '/home/alex/tmp/plotParse/'                   ;Directory to save parsing output in (EFN; default is to place parsed data in same folder as chains)

cut_on_invalid_observables = F              ;Cut on any invalid entries in an hdf5 file, not just the likelihood (defaults to false, meaning cut on likelihood only)

default_bins = 100                           ;Default number of bins to sort samples into in each direction.
number_of_bins =                         ;Bins to use for specific observables (overrides default)
interpolated_resolution = 200               ;Resolution of binwise interpolation for plotting (~300+ for publication)
interpolation_method = 'bilinear'             ;Either bilinear (default) or spline (watch out for ringing in the latter case)

chain_type = other                          ;Algorithm used to generate chain (valid: MCMC, MultiNest, other)
compute_evidence = F                        ;Compute and print evidence (only if chain_type = MCMC)
bf_lnlike_for_profile_like =                ;Denominator of profile likelihood ratio (if empty, set to best fit determined from chain)

use_log_scale = 15 47
; use_log_scale = 15 47                        ;Parameters/observables that need to be converted to a log scale for display (EFN)
quantity_rescalings = 0:-1                      ;Scaling factors to apply to any pippi datastream indices (EFN)
data_ranges = ; 18:{0.299,0.301}, 15:{0.9,1.1}; 7:{0, 10000} 8:{0, 10000} 9:{0, 10000} 10:{0, 10000} 11:{0, 10000} 12:{0, 10000} 13:{0, 10000}
; 7 to 13 : 0-10000 (up from 3000)

labels_from_file =                          ;Either a filename or blank (quantity_labels is ignored if a filename is given)
preamble = 'import numpy as np' ;A one-line python preamble to run before processing functional datastreams.
; assign_to_pippi_datastream = 'LogLike':0 \
                            ;  '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::tanb dimensionless':15\
                            ;  'LogLike':20\
                            ;  '#NLO_unitarity_likelihood_THDM @SpecBit::get_NLO_unitarity_likelihood_THDM':19\
                            ;  'LogLike':20\
                            ; #HS_TEST_CHANNEL_h_to_all @ColliderBit::calc_HS_TEST_CHANNEL_h_to_all
assign_to_pippi_datastream = 'LogLike':0 \
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::lambda_1 mass1':1 \
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::lambda_2 mass1':2 \
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::lambda_3 mass1':3 \
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::lambda_4 mass1':4 \
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::lambda_5 mass1':5 \
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::h0_1 Pole_Mass':6 \
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::h0_1 mass1':7 \
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::h0_2 Pole_Mass':8 \
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::h0_2 mass1':9 \
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::A0 Pole_Mass':10 \
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::A0 mass1':11 \
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::H+ Pole_Mass':12 \
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::H+ mass1':13 \
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::m12_2 mass1':14\
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::tanb dimensionless':15\
                             '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::alpha dimensionless':16\
                             '#sba @SpecBit::obs_sba':17\
                             '#cba @SpecBit::obs_cba':18
                            ;  '':19\
                            ;  '':20\
                            ; ;  '#LHC_Higgs_LogLike @ColliderBit::calc_HS_2_LHC_LogLike':20\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::A0->W-+W+':21\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::A0->Z0+Z0':22\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::A0->bbar+b':23\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::A0->cbar+c':24\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::A0->tbar+t':25\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::A0->gamma+gamma':26\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::A0->tau++tau-':27\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::H+->W-+W+':28\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::H+->Z0+Z0':29\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::H+->bbar+b':30\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::H+->cbar+c':31\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::H+->tbar+t':32\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::H+->gamma+gamma':33\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::H+->tau++tau-':34\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::h0_2->W-+W+':35\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::h0_2->Z0+Z0':36\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::h0_2->bbar+b':37\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::h0_2->cbar+c':38\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::h0_2->tbar+t':39\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::h0_2->gamma+gamma':40\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::h0_2->tau++tau-':41\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::h0_1->W-+W+':42\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::h0_1->Z0+Z0':43\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::h0_1->bbar+b':44\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::h0_1->cbar+c':45\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::h0_1->tbar+t':46\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::h0_1->gamma+gamma':47\
                            ;  '#all_BFs @DecayBit::get_decaytable_as_map::h0_1->tau++tau-':48\
                            ;  '#ba @SpecBit::obs_ba':100\
                            ;  'np.cos($16)/np.sin(np.arctan($15))':101\
                            ;  '-1*np.sin($16)/np.cos(np.arctan($15))':102\
                            ;  'np.sin($16)/np.sin(np.arctan($15))':103\
                            ;  'np.cos($16)/np.cos(np.arctan($15))':104\
                            ;  'np.sin($16)/np.sin(np.arctan($15))':105
                            ;  '#THDM_spectrum_map @SpecBit::get_THDM_spectrum_as_map::tanb dimensionless':106\
                            ;  '#ba @SpecBit::obs_ba':107

                                            ;Assign a python function or named hdf5 data stream to a particular pippi datastream index (use pippi probe to test; EFN)
                ;   15:'$\log(\tan_{\beta})$' \
quantity_labels = 0:'-lnlike'\
                  1:'$\lambda_1$'\
                  2:'$\lambda_2$'\
                  3:'$\lambda_3$'\
                  4:'$\lambda_4$'\
                  5:'$\lambda_5$'\
                  6:'$m_{h}$ [GeV]'\
                  7:'$m_h(m_Z)$ [GeV]'\
                  8:'$m_{H}$ [GeV]'\
                  9:'$m_H(m_Z)$ [GeV]'\
                  10:'$m_{A}$ [GeV]'\
                  11:'$m_A(m_Z)$ [GeV]'\
                  12:'$m_{H^\pm}$ [GeV]'\
                  13:'$m_{H^\pm}(m_Z)$ GeV'\
                  14:'$m_{12}^2 \, [\rm{GeV}^2]$' \
                  15:'$\tan_{\beta}$' \
                  16:'$\alpha$' \
                  17:'$\sin_{\beta\alpha}$' \
                  18:'$\cos_{\beta\alpha}$' 
                  ; 19:'(dead) NLO Unitarity Likelihood' \
                  ; 20:'HS2 Likelihood' \
                  ; 21:'${\rm BR}(A^0 \rightarrow W^- W^+)$' \
                  ; 22:'${\rm BR}(A^0 \rightarrow Z^0 Z^0)$' \
                  ; 23:'${\rm BR}(A^0 \rightarrow \bar{b}b)$' \
                  ; 24:'${\rm BR}(A^0 \rightarrow \bar{c}c)$' \
                  ; 25:'${\rm BR}(A^0 \rightarrow \bar{t}t)$' \
                  ; 26:'${\rm BR}(A^0 \rightarrow \gamma\gamma)$' \
                  ; 27:'${\rm BR}(A^0 \rightarrow \tau^+\tau^-)$' \
                  ; 28:'${\rm BR}(H^\pm \rightarrow W^- W^+)$' \
                  ; 29:'${\rm BR}(H^\pm \rightarrow Z^0 Z^0)$' \
                  ; 30:'${\rm BR}(H^\pm \rightarrow \bar{b}b)$' \
                  ; 31:'${\rm BR}(H^\pm \rightarrow \bar{c}c)$' \
                  ; 32:'${\rm BR}(H^\pm \rightarrow \bar{t}t)$' \
                  ; 33:'${\rm BR}(H^\pm \rightarrow \gamma\gamma)$' \
                  ; 34:'${\rm BR}(H^\pm \rightarrow \tau^+\tau^-)$' \
                  ; 35:'${\rm BR}(H^0 \rightarrow W^- W^+)$' \
                  ; 36:'${\rm BR}(H^0 \rightarrow Z^0 Z^0)$' \
                  ; 37:'${\rm BR}(H^0 \rightarrow \bar{b}b)$' \
                  ; 38:'${\rm BR}(H^0 \rightarrow \bar{c}c)$' \
                  ; 39:'${\rm BR}(H^0 \rightarrow \bar{t}t)$' \
                  ; 40:'${\rm BR}(H^0 \rightarrow \gamma\gamma)$' \
                  ; 41:'${\rm BR}(H^0 \rightarrow \tau^+\tau^-)$' \
                  ; 42:'${\rm BR}(h^0 \rightarrow W^- W^+)$' \
                  ; 43:'${\rm BR}(h^0 \rightarrow Z^0 Z^0)$' \
                  ; 44:'${\rm BR}(h^0 \rightarrow \bar{b}b)$' \
                  ; 45:'${\rm BR}(h^0 \rightarrow \bar{c}c)$' \
                  ; 46:'${\rm BR}(h^0 \rightarrow \bar{t}t)$' \
                  ; 47:'${\rm BR}(h^0 \rightarrow \gamma\gamma)$' \
                  ; 48:'${\rm BR}(h^0 \rightarrow \tau^+\tau^-)$' \
                  ; 100:'$\beta-\alpha$'\
                  ; 101:'$\cos\alpha / \sin\beta$'\
                  ; 102:'$- \sin\alpha / \cos\beta$'\
                  ; 103:'$\sin\alpha / \sin\beta$'\
                  ; 104:'$\cos\alpha / \cos\beta$'\
                  ; 105:'$\sin\alpha / \sin\beta$'

                ;   106:'$\tan_{\beta}$'\
                ;   107:'$\beta-\alpha$'
                                            ;labels to apply to different pippi datastream indices (LaTeX for all but multiplicity, prior and likelihood)
-------------------------------
---Scripting-------------------

script_dir = '/home/alex/tmp/plotScripts/'                ;Directory to save scripts in (EFN; default is to place scripts in same folder as parse output)

legend_on_1D = 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18                 ;1D plots that should include legends
legend_locations_1D = 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18          ;Locations of legends for 1D plots (subset of twoD_plot_quantities)
plot_as_histograms_1D = T                                                   ;Plot 1D distributions as histograms with no interpolation
key_on_1D = 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18                    ;2D plots that should include keys for best fit, posterior mean and/or reference pt
key_locations_1D = 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18             ;Locations of keys for 2D plots

legend_on_2D =                              ;2D plots that should include legends
legend_locations_2D =                       ;Locations of legends for 2D plots (single location or partial list that will be filled in with 'bl')
key_on_2D =                                 ;2D plots that should include keys for best fit, posterior mean and/or reference pt
key_locations_2D =                          ;Locations of keys for 2D plots
; plot_colourbar_2D = {18,15} {17,15} ; {2,15} {1,2} {1,3} {1,4} {1,5} {2,3} {2,4} {2,5} {3,4} {3,5} {4,5} {8,6} {8,10} {8,12} {8,14} {10,14} {12,14} {14,15} {15,14} {8,15} {10,15} {12,15} {14,12} {10,15} {10,12} {8,12} {15,18} {15,16}                        ;2D plots that should include colourbars
plot_colourbar_2D = {2,15} {1,2} {1,3} {1,4} {1,5} {2,3} {2,4} {2,5} {3,4} {3,5} {4,5} {8,6} {8,10} {8,12} {8,14} {10,14} {12,14} {14,15} {15,14} {8,15} {10,15} {12,15} {14,12} {10,15} {10,12} {8,12} {15,18} {15,16}                        ;2D plots that should include colourbars

plot_comparison = F                         ;Overplot distributions from comparisonFilename in 1D plots and contours in 2D plots
extra_legend_lines =                        ;Additional text lines to be included in any legends (EFN)
blame = 'pippi v2.1'                        ;Credit line to be placed in top corner of all plots
yaxis_number_angle = -90                    ;Angle relative to vertical for y-axis numerical labels

plot_posterior_mean_on_posterior_pdf = F    ;Indicate the posterior mean in all posterior pdf plots
plot_posterior_mean_on_profile_like = F     ;Indicate the posterior mean in all profile likelihood plots
plot_best_fit_on_posterior_pdf = F          ;Indicate the best fit in all posterior pdf plots
plot_best_fit_on_profile_like = T           ;Indicate the best fit in all profile likelihood plots

; axis_ranges = 18:{-1.0,1.0} 17:{-1.0,1.0}  ;18:{-0.05,0.05} 101:{0.97,1.03} 102:{0.8,1.2} 103:{-1.2,0.2} 104:{0,40} 105:{-1,0} 1:{0,6} 2:{0,5} 3:{-5,5} 4:{-5,5} 5:{-5,5} 6:{0,250} 7:{0, 10000} 8:{0, 10000} 9:{0, 10000} 10:{0, 10000} 11:{0, 10000} 12:{0, 10000} 13:{0, 10000} 14:{-10000,400000} 6:{122,128}; 7:{0,1000} 8:{0,1200} 9:{0, 10000} 10:{0,1200} 11:{0, 10000} 12:{0, 10000} 13:{0, 10000} 14:{-10000,400000}                     ;Axis ranges over which to plot parameters/observables (defaults to data_ranges if absent)
axis_ranges = 6:{0,250} 7:{0,3000} 8:{0,3000} 9:{0,3000} 10:{0,3000} 11:{0,3000} 12:{0,3000} 13:{0,3000} 14:{-10000,1000000} 
; axis_ranges = 1:{0,4} 2:{0,4} 3:{-4,4} 4:{-4,4} 5:{-4,4} 6:{0,250} 7:{0,3000} 8:{0,3000} 9:{0,3000} 10:{0,3000} 11:{0,3000} 12:{0,3000} 13:{0,3000} 14:{-10000,1000000} 


reference_point =                           ;Coordinates of reference point (only plotted where one of the listed axes is present)
reference_text =                            ;Key string to be printed for reference point

logo_file =                                 ;Logo pdf file to overplot (EFN)
logo_loc =                                  ;Normalised plot x,y co-ordinates of logo centre
logo_width =                                ;Width to display logo with (as a fraction of default plot width)
colour_scheme = Basic         ;filip A recognised pippi colourScheme object (Basic, BlueGold, IceCube, SBClassic,
                                            ; NightOfTheAllanachs, etc - add your own to pippi_colours.py)
-------------------------------
---Plotting--------------------

plot_dir = '../runs/plots/latest/'                    ;Directory to save plots in (EFN; default is to place plots in the current directory)
file_prefix = 'plot_'                       ;Prepend prefix to plot filenames (EFN)
file_suffix = ''                    ;Append suffix to filenames of output plots (EFN)
